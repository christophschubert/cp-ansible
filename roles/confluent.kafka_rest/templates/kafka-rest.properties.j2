# Maintained by Ansible
{% from './roles/confluent.common/macros/sasl.j2' import sasl_krb5, sasl_plain, sasl_scram, sasl_plain_user, sasl_scram_user %}
{% from './roles/confluent.common/macros/connectstring.j2' import join_string, connection_string, connection_string_protocol %}
{% for key, value in kafka_rest.properties.items() %}
{{key}}={{value}}
{% endfor %}

# Kafka Rest Configuration
listeners={{kafka_rest_http_protocol}}://0.0.0.0:{{kafka_rest_port}}
host.name={{inventory_hostname}}
{% if kafka_rest_ssl_enabled|bool %}
ssl.keystore.location={{kafka_rest_keystore_path}}
ssl.keystore.password={{kafka_rest_keystore_storepass}}
ssl.key.password={{kafka_rest_keystore_keypass}}
{% if kafka_rest_ssl_mutual_auth_enabled|bool %}
ssl.client.auth=false
#Set to true if you wish to force Client SSL Authentication
ssl.truststore.location={{kafka_rest_truststore_path}}
ssl.truststore.password={{kafka_rest_truststore_storepass}}
{% endif %}
{% endif %}

# Kafka Broker Configuration
bootstrap.servers={{ connection_string(groups['kafka_broker'], kafka_broker_listeners[kafka_rest_kafka_listener_name]['port']) }}

client.security.protocol={{kafka_broker_listeners[kafka_rest_kafka_listener_name] | kafka_protocol_defaults(sasl_protocol, ssl_enabled) }}
{% if kafka_broker_listeners[kafka_rest_kafka_listener_name]['ssl_enabled'] | default(ssl_enabled) | bool %}
client.ssl.truststore.location={{kafka_rest_truststore_path}}
client.ssl.truststore.password={{kafka_rest_truststore_storepass}}
{% if kafka_broker_listeners[kafka_rest_kafka_listener_name]['ssl_mutual_auth_enabled'] | default(ssl_mutual_auth_enabled) | bool %}
client.ssl.keystore.location={{kafka_rest_keystore_path}}
client.ssl.keystore.password={{kafka_rest_keystore_storepass}}
client.ssl.key.password={{kafka_rest_keystore_keypass}}
{% endif %}
{% endif %}
{% if kafka_broker_listeners[kafka_rest_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'PLAIN' %}
client.sasl.mechanism=PLAIN
client.sasl.jaas.config={{ sasl_plain_user(sasl_plain_users.kafka_rest) }}
{% endif %}
{% if kafka_broker_listeners[kafka_rest_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'GSSAPI' %}
client.sasl.mechanism=GSSAPI
client.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
client.sasl.jaas.config={{ sasl_krb5(kerberos.keytab_dir, kafka_rest_kerberos_keytab_path, kafka_rest_kerberos_principal) }}
{% endif %}
{% if kafka_broker_listeners[kafka_rest_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'SCRAM-SHA-256' %}
client.sasl.mechanism=SCRAM-SHA-256
client.sasl.jaas.config={{ sasl_scram_user(sasl_scram_users.kafka_rest) }}
{% endif %}

{% set schema_registries = groups.get('schema_registry', []) %}
{% if schema_registries %}
# Schema Registry Configuration
schema.registry.url={{ connection_string_protocol(schema_registry_http_protocol, groups['schema_registry'], schema_registry_listener_port) }}

{% if schema_registry_ssl_enabled|bool %}
schema.registry.ssl.truststore.location={{kafka_rest_truststore_path}}
schema.registry.ssl.truststore.password={{kafka_rest_truststore_storepass}}
schema.registry.ssl.keystore.location={{kafka_rest_keystore_path}}
schema.registry.ssl.keystore.password={{kafka_rest_keystore_storepass}}
schema.registry.ssl.key.password={{kafka_rest_keystore_keypass}}
{% endif %}
{% endif %}
